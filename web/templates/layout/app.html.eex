<html>
<head>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="http://neo4j-contrib.github.io/developer-resources/language-guides/assets/css/main.css">
  <title>Elixir/Phoenix/Neo4j - Movies</title>
</head>

<body>
<p class="alert alert-info" role="alert"><%= get_flash(@conn, :info) %></p>

<p class="alert alert-danger" role="alert"><%= get_flash(@conn, :error) %></p>

<div role="navigation" class="navbar navbar-default navbar-static-top">
  <div class="container">
    <div class="row">
      <div class="col-sm-6 col-md-6">
        <ul class="nav navbar-nav">
          <li>
            <form role="search" class="navbar-form" id="search">
              <div class="form-group">
                <input type="text" value="Matrix" placeholder="Search for Movie Title" class="form-control"
                       name="search">
              </div>
              <button class="btn btn-default" type="submit">Search</button>
            </form>
          </li>
        </ul>
      </div>
      <div class="navbar-header col-sm-6 col-md-6">
        <div class="logo-well">
          <a href="http://neo4j.com/developer-resources">
            <img src="http://neo4j-contrib.github.io/developer-resources/language-guides/assets/img/logo-white.svg"
                 alt="Neo4j World's Leading Graph Database" id="logo">
          </a>
        </div>
        <div class="navbar-brand">
          <div class="brand">Neo4j Movies</div>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="row">
  <div class="col-md-5">
    <div class="panel panel-default">
      <div class="panel-heading">Search Results</div>
      <table id="results" class="table table-striped table-hover">
        <thead>
        <tr>
          <th>Movie</th>
          <th>Released</th>
          <th>Tagline</th>
        </tr>
        </thead>
        <tbody>
        </tbody>
      </table>
    </div>
  </div>
  <div class="col-md-7">
    <div class="panel panel-default">
      <div class="panel-heading" id="title">Details</div>
      <div class="row">
        <div class="col-sm-4 col-md-4">
          <img src="" class="well" id="poster"/>
        </div>
        <div class="col-md-8 col-sm-8">
          <h4>Crew</h4>
          <ul id="crew">
          </ul>
        </div>
      </div>
    </div>
  </div>
</div>

<div id="graph">
</div>

<%= render @view_module, @view_template, assigns %>

<style type="text/css">
  .node {
    stroke: #222;
    stroke-width: 1.5px;
  }

  .node.actor {
    fill: #888;
  }

  .node.movie {
    fill: #BBB;
  }

  .link {
    stroke: #999;
    stroke-opacity: .6;
    stroke-width: 1px;
  }

  .marketing {
    padding-right: 10px;
    padding-left: 10px;
  }

  /* Phoenix flash messages */
  .alert:empty {
    display: none;
  }

  #graph {
    position: relative;
    margin-top: 10px;
  }

</style>

<script type="text/javascript" src="//code.jquery.com/jquery-1.11.0.min.js"></script>
<script src="http://d3js.org/d3.v3.min.js" type="text/javascript"></script>
<script src="<%= static_path(@conn, "/js/app.js") %>"></script>

<script type = "text/javascript" >
    $(function () {
      function showMovie(title) {
        $.get("/movies/findByTitle?title=" + encodeURIComponent(title),
            function (movie) {
              if (!movie) return; //  || !data["_embedded"].movies) return;
              $("#title").text(movie.title);
              $("#poster").attr("src", "http://neo4j-contrib.github.io/developer-resources/language-guides/assets/posters/" + encodeURIComponent(movie.title) + ".jpg");
              var $list =
              $("#crew").empty();
              movie.crew.forEach(function (cast) {
                var job = cast.type || "acted";
                  $list.append($("<li>" + cast.name + " " +job + (job == "ACTED_IN"?" as " + cast.roles.join(
                    ", ") : "") + "</li>"));
              });
            }, "json");
        return false;
      }

      function search() {
        var query = $("#search").find("input[name=search]").val();
        $.get("/movies/findByTitleContaining?title=" + encodeURIComponent(query),
            function (data) {
              var t = $("table#results tbody").empty();
              if (!data.movies) return;
              data.movies.forEach(function (movie) {
                $("<tr><td class='movie'>" + movie.title + "</td><td>" + movie.released + "</td><td>" + movie.tagline + "</td></tr>").appendTo(t)
                    .click(function () {
                      showMovie($(this).find("td.movie").text());
                    })
              });
              showMovie(data.movies[0].title);
            }, "json");
        return false;
      }

      $("#search").submit(search);
      search();
    })
</script>

<script type="text/javascript">
  var width = 800, height = 800;
  var color = d3.scale.category20();

  var force = d3.layout.force()
      .charge(-200).linkDistance(30).size([width, height]);

  var svg = d3.select("#graph").append("svg")
      .attr("width", "100%").attr("height", "100%")
      .attr("pointer-events", "all");

  d3.json("/movies/graph?limit=100", function (error, graph) {
    if (error) return;

    force.nodes(graph.nodes).links(graph.links).start();

    var link = svg.selectAll(".link")
        .data(graph.links).enter()
        .append("line").attr("class", "link")
        .style("stroke-width", 1);

    var gnodes = svg.selectAll('g.gnode')
        .data(graph.nodes).enter()
        .append('g').classed('gnode', true);

    var node = gnodes.append("circle")
        .attr("class", "node")
        .attr("r", function (d) {if(d.label == "actor"){
            return 10;
          }else{
            return 5;
          }})
        .style("fill", function (d) {
          if(d.label == "actor"){
            return "#98df8a";
          }else{
            return "#ff7f0e";
          }
        }).call(force.drag);

    var labels = gnodes.append("text")
        .text(function (d) {
          return d.title;
        });

    // force feed algo ticks
    force.on("tick", function () {
      link.attr("x1", function (d) {
        return d.source.x;
      })
          .attr("y1", function (d) {
            return d.source.y;
          })
          .attr("x2", function (d) {
            return d.target.x;
          })
          .attr("y2", function (d) {
            return d.target.y;
          });

      gnodes.attr("transform", function (d) {
        return 'translate(' + [d.x, d.y] + ')';
      });
    });
  });
</script>
</body>
</html>
